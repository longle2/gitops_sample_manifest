apiVersion: apps/v1
kind: Deployment
metadata:
  # creationTimestamp: null
  labels:
    app: go-prometheus
  name: go-prometheus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-prometheus
  strategy: {}
  template:
    metadata:
      # creationTimestamp: null
      labels:
        app: go-prometheus
    spec:
      containers:
      - image: 035296596762.dkr.ecr.ap-southeast-1.amazonaws.com/prometheus_sample_go:latest
        name: go-prometheus
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: lb-service-go-prometheus
  labels:
    app: lb-service-go-prometheus
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: go-prometheus
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "lb-service-go-prometheus"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/preserve-trailing-slash: "true"
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:035296596762:certificate/65b6ab5d-6da5-4810-92af-4442113860f8
  labels:
    app: lb-service-go-prometheus
spec:
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: "lb-service-go-prometheus"
              port: 
                number: 80